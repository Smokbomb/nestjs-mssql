{"version":3,"sources":["../../src/decorator/Generated.ts"],"names":[],"mappings":";;AAAA,wBAA2C;AAG3C;;;;;;;GAOG;AACH,mBAA0B,QAA0C;IAA1C,yBAAA,EAAA,sBAA0C;IAChE,OAAO,UAAU,MAAc,EAAE,YAAoB;QAEjD,yBAAsB,EAAE,CAAC,WAAW,CAAC,IAAI,CAAC;YACtC,MAAM,EAAE,MAAM,CAAC,WAAW;YAC1B,YAAY,EAAE,YAAY;YAC1B,QAAQ,EAAE,QAAQ;SACI,CAAC,CAAC;IAChC,CAAC,CAAC;AACN,CAAC;AATD,8BASC","file":"Generated.js","sourcesContent":["import {getMetadataArgsStorage} from \"../\";\nimport {GeneratedMetadataArgs} from \"../metadata-args/GeneratedMetadataArgs\";\n\n/**\n * Marks a column to generate a value on entity insertion.\n * There are two types of generation strategy - increment and uuid.\n * Increment uses a number which increases by one on each insertion.\n * Uuid generates a special UUID token.\n *\n * Note, some databases do not support non-primary generation columns.\n */\nexport function Generated(strategy: \"increment\"|\"uuid\" = \"increment\"): Function {\n    return function (object: Object, propertyName: string) {\n\n        getMetadataArgsStorage().generations.push({\n            target: object.constructor,\n            propertyName: propertyName,\n            strategy: strategy\n        } as GeneratedMetadataArgs);\n    };\n}\n"],"sourceRoot":".."}