{"version":3,"sources":["../browser/src/error/QueryFailedError.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAAA;;EAEE;AACF;IAAsC,oCAAK;IAEvC,0BAAY,KAAa,EAAE,UAA2B,EAAE,WAAgB;QAAxE,YACI,iBAAO,SAYV;QAXG,MAAM,CAAC,cAAc,CAAC,KAAI,EAAE,gBAAgB,CAAC,SAAS,CAAC,CAAC;QACxD,KAAI,CAAC,OAAO,GAAG,WAAW,CAAC,QAAQ,EAAE;aAChC,OAAO,CAAC,UAAU,EAAE,EAAE,CAAC;aACvB,OAAO,CAAC,UAAU,EAAE,EAAE,CAAC;aACvB,OAAO,CAAC,UAAU,EAAE,EAAE,CAAC,CAAC;QAC7B,MAAM,CAAC,MAAM,CAAC,KAAI,eACX,WAAW,IACd,IAAI,EAAE,kBAAkB,EACxB,KAAK,EAAE,KAAK,EACZ,UAAU,EAAE,UAAU,IAAI,EAAE,IAC9B,CAAC;;IACP,CAAC;IAEL,uBAAC;AAAD,CAjBA,AAiBC,CAjBqC,KAAK,GAiB1C","file":"QueryFailedError.js","sourcesContent":["/**\n * Thrown when query execution has failed.\n*/\nexport class QueryFailedError extends Error {\n\n    constructor(query: string, parameters: any[]|undefined, driverError: any) {\n        super();\n        Object.setPrototypeOf(this, QueryFailedError.prototype);\n        this.message = driverError.toString()\n            .replace(/^error: /, \"\")\n            .replace(/^Error: /, \"\")\n            .replace(/^Request/, \"\");\n        Object.assign(this, {\n            ...driverError,\n            name: \"QueryFailedError\",\n            query: query,\n            parameters: parameters || []\n        });\n    }\n\n}"],"sourceRoot":".."}