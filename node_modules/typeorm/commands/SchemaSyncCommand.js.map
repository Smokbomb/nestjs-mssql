{"version":3,"sources":["../../src/commands/SchemaSyncCommand.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,kCAA0C;AAE1C,iFAA8E;AAC9E,IAAM,KAAK,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC;AAE/B;;GAEG;AACH;IAAA;QACI,YAAO,GAAG,aAAa,CAAC;QACxB,aAAQ,GAAG,8GAA8G;YACrH,+DAA+D,CAAC;IA0CxE,CAAC;IAxCG,mCAAO,GAAP,UAAQ,KAAU;QACd,OAAO,KAAK;aACP,MAAM,CAAC,GAAG,EAAE;YACT,KAAK,EAAE,YAAY;YACnB,OAAO,EAAE,SAAS;YAClB,QAAQ,EAAE,yEAAyE;SACtF,CAAC;aACD,MAAM,CAAC,GAAG,EAAE;YACT,KAAK,EAAE,QAAQ;YACf,OAAO,EAAE,WAAW;YACpB,QAAQ,EAAE,iDAAiD;SAC9D,CAAC,CAAC;IACX,CAAC;IAEK,mCAAO,GAAb,UAAc,IAAS;;;;;;wBAEf,UAAU,GAAyB,SAAS,CAAC;;;;wBAEvC,uBAAuB,GAAG,IAAI,iDAAuB,CAAC,EAAE,IAAI,EAAE,OAAO,CAAC,GAAG,EAAE,EAAE,UAAU,EAAE,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC;wBACpF,qBAAM,uBAAuB,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,EAAA;;wBAAtE,iBAAiB,GAAG,SAAkD;wBAC5E,MAAM,CAAC,MAAM,CAAC,iBAAiB,EAAE;4BAC7B,WAAW,EAAE,KAAK;4BAClB,aAAa,EAAE,KAAK;4BACpB,UAAU,EAAE,KAAK;4BACjB,OAAO,EAAE,CAAC,OAAO,EAAE,QAAQ,CAAC;yBAC/B,CAAC,CAAC;wBACU,qBAAM,wBAAgB,CAAC,iBAAiB,CAAC,EAAA;;wBAAtD,UAAU,GAAG,SAAyC,CAAC;wBACvD,qBAAM,UAAU,CAAC,WAAW,EAAE,EAAA;;wBAA9B,SAA8B,CAAC;wBAC/B,qBAAM,UAAU,CAAC,KAAK,EAAE,EAAA;;wBAAxB,SAAwB,CAAC;wBAEzB,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,8CAA8C,CAAC,CAAC,CAAC;;;;6BAGrE,UAAU,EAAV,wBAAU;wBAAE,qBAAO,UAAyB,CAAC,KAAK,EAAE,EAAA;;wBAAxC,SAAwC,CAAC;;;wBAEzD,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,sCAAsC,CAAC,CAAC,CAAC;wBACvE,OAAO,CAAC,KAAK,CAAC,KAAG,CAAC,CAAC;wBACnB,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;;;;;;KAEvB;IACL,wBAAC;AAAD,CA7CA,AA6CC,IAAA;AA7CY,8CAAiB","file":"SchemaSyncCommand.js","sourcesContent":["import {createConnection} from \"../index\";\nimport {Connection} from \"../connection/Connection\";\nimport {ConnectionOptionsReader} from \"../connection/ConnectionOptionsReader\";\nconst chalk = require(\"chalk\");\n\n/**\n * Synchronizes database schema with entities.\n */\nexport class SchemaSyncCommand {\n    command = \"schema:sync\";\n    describe = \"Synchronizes your entities with database schema. It runs schema update queries on all connections you have. \" +\n        \"To run update queries on a concrete connection use -c option.\";\n\n    builder(yargs: any) {\n        return yargs\n            .option(\"c\", {\n                alias: \"connection\",\n                default: \"default\",\n                describe: \"Name of the connection on which schema synchronization needs to to run.\"\n            })\n            .option(\"f\", {\n                alias: \"config\",\n                default: \"ormconfig\",\n                describe: \"Name of the file with connection configuration.\"\n            });\n    }\n\n    async handler(argv: any) {\n\n        let connection: Connection|undefined = undefined;\n        try {\n            const connectionOptionsReader = new ConnectionOptionsReader({ root: process.cwd(), configName: argv.config });\n            const connectionOptions = await connectionOptionsReader.get(argv.connection);\n            Object.assign(connectionOptions, {\n                synchronize: false,\n                migrationsRun: false,\n                dropSchema: false,\n                logging: [\"query\", \"schema\"]\n            });\n            connection = await createConnection(connectionOptions);\n            await connection.synchronize();\n            await connection.close();\n\n            console.log(chalk.green(\"Schema syncronization finished successfully.\"));\n\n        } catch (err) {\n            if (connection) await (connection as Connection).close();\n\n            console.log(chalk.black.bgRed(\"Error during schema synchronization:\"));\n            console.error(err);\n            process.exit(1);\n        }\n    }\n}"],"sourceRoot":".."}